#  Create a staging namespace and set it as the default to group the Kubernetes 
   objects for this activity

-> to check the 
kubectl cluster-info  

-> create namespace staging and validate

k create ns staging
k get ns

->set new ns as default 

kubectl config set-context default --namespace staging

-> check the default ns

k config view

labsuser@labs-vm-c0acca55-66c0-478d-b768-038819aa4261:~$ k config view
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://127.0.0.1:6443
  name: default
contexts:
- context:
    cluster: default
    namespace: staging
    user: default
  name: default
current-context: default
kind: Config
preferences: {}
users:
- name: default
  user:
    client-certificate-data: REDACTED
    client-key-data: REDACTED

- create pod and add resource section

k run brezyweather --image=codewithpraveen/labs-k8s-brezyweather:1.0 --port=80 -n staging --dry-run=client -o yaml > pod.yaml

piVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: brezyweather
  name: brezyweather
  namespace: staging
spec:
  containers:
  - image: codewithpraveen/labs-k8s-brezyweather:1.0
    name: brezyweather
    ports:
    - containerPort: 80
    resources:                          # add resource limits
      limits:
        memory: "128Mi"
        cpu: "500m"
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}

k apply -f pod.yaml
k get po

NAME           READY   STATUS    RESTARTS   AGE
brezyweather   1/1     Running   0          63s

-> add init container to wit delay of 20 seconds with busy box image.

metadata:
  creationTimestamp: null
  labels:
    run: brezyweather
  name: brezyweather
  namespace: staging
spec:
  initContainers:
  - name: init-sleep
    image: busybox:1.36
    args:
    - 'sh'
    - '-c'
    - 'sleep 20'
  - name: init-setup-service
    image: busybox:1.36
    args:
    - 'sh'
    - '-c'
    - |
      until nslookup brezyweather.staging.svc.cluster.local; do
        echo waiting for brezyweather service;
        sleep 1;
      done
  containers:
  - image: codewithpraveen/labs-k8s-brezyweather:1.0
    name: brezyweather
    ports:
    - containerPort: 80
    resources:                          # add resource limits
      limits:
        memory: "128Mi"
        cpu: "500m"
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}


k get po
NAME           READY   STATUS     RESTARTS   AGE
brezyweather   0/1     Init:1/2   0          33s

-> create a service now we can notice pod is running

kubectl create service clusterip brezyweather --tcp=8080:80 -n staging --dry-run=client -o yaml > svc.yaml

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: brezyweather
  name: brezyweather
  namespace: staging
spec:
  ports:
  - name: 8080-80
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: brezyweather
  type: ClusterIP
status:
  loadBalancer: {}        

service/brezyweather replaced
labsuser@labs-vm-c0acca55-66c0-478d-b768-038819aa4261:~/brezyweather$ k get po
NAME           READY   STATUS    RESTARTS   AGE
brezyweather   1/1     Running   0          10m
labsuser@labs-vm-c0acca55-66c0-478d-b768-038819aa4261:~/brezyweather$     

